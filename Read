Create a REST API for the Employees Management System
REST clients for:
• Get a list of employees
• Get a single employee by id
• Add a new employee
• Update an employee
• Delete an employee

POST /api/employees Create a new employee
GET /api/employees Read a list of employees
GET /api/employees/{employeeId} Read a single employee
PUT /api/employees Update an existing employee
DELETE /api/employees/{employeeId} Delete an existing employee

1.  Set up Database Dev Environment
2.  Create Spring Boot project using Spring Initializr
3.  Get list of employees
4.  Get single employee by ID
5.  Add a new employee
6.  Update an existing employee
7.  Delete an existing employee
8.  Implementing  - Errors Handling
9.  Implementing  - Actuators
10. Implementing  - Unitary and Integration Test
11  Caching  - TO DO
12  Security - TO DO
13  Advance Hibernate features - TO DO



Rest controller-service-dao-mysql
hibernate session factory


EntityManager is similar to Hibernate SessionFactory
• EntityManager can serve as a wrapper for a Hibernate Session object


spring.jpa.properties.hibernate.format_sql=true
#Prima linie înregistreaz? interog?rile SQL, iar a doua instruc?iune înregistreaz? parametrii instruc?iunii preg?tite.
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


Development Process
1. Create a custom error response class
2. Create a custom exception class
3. Update REST service to throw exception if student not found
4. Add an exception handler method using @ExceptionHandler


{
"firstName": "Ion",
"lastName": "Mirestea",
"email": "Ion@gmail.com",
"departament": "IT",
"dateOfBirth": "1979-10-05"
}

RestTemplate read from:
http://localhost:8080/api/employees;
http://localhost:8080/api/employees;
http://localhost:8080/api/employees/{id};

Expose to:
http://localhost:8080/RestTemplate/getAllEmployee
http://localhost:8080/RestTemplate/addEmployee
http://localhost:8080/RestTemplate/getEmployeeById/4

---------------------------
CREATE USER 'hbstudent'@'localhost' IDENTIFIED BY 'hbstudent';

GRANT ALL PRIVILEGES ON * . * TO 'hbstudent'@'localhost';

#
# Starting with MySQL 8.0.4, the MySQL team changed the
# default authentication plugin for MySQL server
# from mysql_native_password to caching_sha2_password.
#
# The command below will make the appropriate updates for your user account.
#
# See the MySQL Reference Manual for details:
# https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html
#
ALTER USER 'hbstudent'@'localhost' IDENTIFIED WITH mysql_native_password BY 'hbstudent';

--------------
to avoid app to enter in an infinite loop / infinite recursion Stackoverflow error.
@JsonManagedReference
@JsonBackReference